{
    "openapi": "3.1.0",
    "info": {
        "version": "0.1.0",
        "title": "Piggybank - A personal financial manager",
        "summary": "REST API definition for a personal financial manager.",
        "description": "Specification of the REST API for managing bank accounts, exchange accounts, crypto wallets and all the associated movements to those accounts.",
        "license": {
            "name": "MIT License",
            "identifier": "MIT"
        }
    },
    "servers": [
        {
            "url": "https://localhost:4545/api",
            "description": "Basic development server"
        }
    ],
    "tags": [
        {
            "name": "Server Info",
            "description": "Server management related endpoints."
        },
        {
            "name": "Common Data",
            "description": "Data that can be used commonly in the application."
        },
        {
            "name": "Banks Management",
            "description": "Bank management related operations, like account management, movements, stocks and funds."
        }
    ],
    "paths": {
        "/info": {
            "get": {
                "tags": ["Server Info"],
                "summary": "Get current server information",
                "description": "Operation to check the server availability and also check current API version.",
                "operationId": "info.get",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "apiVersion": {
                                            "type": "string",
                                            "description": "API version in M.m.p version (major, minor, patch)"
                                        },
                                        "serverVersion": {
                                            "type": "string",
                                            "description": "Server version in M.m.p version (major, minor, patch)"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/common/movtypes": {
            "get": {
                "tags": ["Common Data"],
                "description": "Get a list of all the possible values for movement types.",
                "operationId": "common.movtypes",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/commonMovTypes"
                                    },
                                    "minItems": 11,
                                    "maxItems": 11,
                                    "uniqueItems": true,
                                    "default": [
                                        "deposit",
                                        "withdrawal",
                                        "trade",
                                        "airdrop",
                                        "mining_reward",
                                        "fut_open_long",
                                        "fut_close_long",
                                        "fut_liq_long",
                                        "fut_open_short",
                                        "fut_close_short",
                                        "fut_liq_short"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/common/assettypes": {
            "get": {
                "tags": ["Common Data"],
                "description": "Get a list of all the possible values for asset types.",
                "operationId": "common.assettypes",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/commonAssetTypes"
                                    },
                                    "minItems": 4,
                                    "maxItems": 4,
                                    "uniqueItems": true,
                                    "default": [
                                        "fiat",
                                        "crypto",
                                        "stock",
                                        "fund"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banks/periodicities": {
            "get": {
                "tags": ["Banks Management"],
                "description": "Get a list of all the possible values for bank periodicities.",
                "operationId": "banks.periodicities",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/bankPeriodicities"
                                    },
                                    "minItems": 6,
                                    "maxItems": 6,
                                    "uniqueItems": true,
                                    "default": [
                                        "one_time",
                                        "weekly",
                                        "biweekly",
                                        "monthly",
                                        "bimonthly",
                                        "quarterly",
                                        "yearly"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banks/accounts": {
            "get": {
                "tags": ["Banks Management"],
                "description": "Get the list of bank accounts.",
                "operationId": "banks.accounts.get",
                "responses": {
                    "200": {
                        "description": "Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/tableID"
                                            },
                                            {
                                                "$ref": "#/components/schemas/bankAccountData"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Banks Management"],
                "description": "Add a new bank account entry.",
                "operationId": "banks.accounts.post",
                "requestBody": {
                    "required": true,
                    "description": "Array of objects describing new account entries.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "allOf": [
                                        {
                                            "required": ["name", "iban"]
                                        },
                                        {
                                            "$ref": "#/components/schemas/bankAccountData"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank accounts successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/tableID"
                                            },
                                            {
                                                "$ref": "#/components/schemas/bankAccountData"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot add entry.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banks/accounts/{id}": {
            "patch": {
                "tags": ["Banks Management"],
                "description": "Update an existing bank account entry.",
                "operationId": "banks.accounts.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Entry ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "description": "Object describing the fields to be updated.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bankAccountData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succesful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/tableID"
                                        },
                                        {
                                            "$ref": "#/components/schemas/bankAccountData"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entry not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Banks Management"],
                "description": "Remove an existing bank account.",
                "operationId": "banks.accounts.delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Entry ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/tableID"
                                        },
                                        {
                                            "$ref": "#/components/schemas/bankAccountData"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entry not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "commonMovTypes": {
                "type": "string",
                "enum": [
                    "deposit",
                    "withdrawal",
                    "trade",
                    "airdrop",
                    "mining_reward",
                    "fut_open_long",
                    "fut_close_long",
                    "fut_liq_long",
                    "fut_open_short",
                    "fut_close_short",
                    "fut_liq_short"
                ]
            },
            "commonAssetTypes": {
                "type": "string",
                "description": "Type of asset.",
                "enum": [
                    "fiat",
                    "crypto",
                    "stock",
                    "fund"
                ]
            },
            "bankPeriodicities": {
                "type": "string",
                "enum": [
                    "one_time",
                    "weekly",
                    "biweekly",
                    "monthly",
                    "bimonthly",
                    "quarterly",
                    "yearly"
                ]
            },
            "bankAccountData": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name to identify the account.",
                        "minimum": 1,
                        "maximum": 30,
                        "example": "Made Up Bank Name"
                    },
                    "iban": {
                        "type": "string",
                        "description": "IBAN number to formally identify the account.",
                        "minimum": 1,
                        "maximum": 34,
                        "example": "ES271111222233334444"
                    },
                    "closed": {
                        "type": "string",
                        "description": "Timestamp of when the account was closed. Empty if the account is still empty.",
                        "format": "date-time"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments related to the account.",
                        "maximum": 200,
                        "example": "This is just an example comment"
                    }
                }
            },
            "tableID": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ID of the table entry."
                    }
                }
            },
            "CommonError": {
                "type": "object",
                "properties": {
                    "err": {
                        "type": "string",
                        "description": "Error name."
                    },
                    "message": {
                        "type": "string",
                        "description": "Detailed error description."
                    },
                    "details": {
                        "description": "Optional field with additional details on the error."
                    }
                }
            }
        }
    }
}
